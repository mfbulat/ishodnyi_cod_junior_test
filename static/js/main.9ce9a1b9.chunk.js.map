{"version":3,"sources":["components/App.module.css","components/Header/Header.module.css","state/event-reducer.ts","state/app-reducer.ts","components/AddEventForms/EventForm.tsx","assets/images/bell-icon.svg","components/Header/Header.tsx","components/EventsList/EventsList.tsx","components/App.tsx","reportWebVitals.ts","state/store.ts","index.tsx","components/EventsList/EventsList.module.css","components/AddEventForms/EventForm.module.css"],"names":["module","exports","initialState","addEvent","title","type","date","Date","toString","split","splice","join","showEventListToggle","showHideEvent","showEvent","EventForm","useState","eventTitle","setEventTitle","events","useSelector","state","even","app","length","count","setCount","dispatch","useDispatch","useEffect","id","setInterval","prevCount","clearInterval","handleSubmit","event","preventDefault","stopPropagation","className","style","eFormContainer","eForm","formItem","value","onChange","e","target","onKeyPress","key","onClick","Header","iconStyle","backgroundImage","BellIcon","backgroundSize","backgroundRepeat","getReadEventsCount","readEventsCount","forEach","el","isRead","header","iconBlock","newEventsCount","EventsList","eventsListContainer","CSSTransition","in","timeout","classNames","unmountOnExit","eventsListWrapper","eventsList","eventsCopy","getFirstFourEvents","map","eventBlock","tittle","showAllEvents","App","appContainer","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ce9a1b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"App_appContainer__JzRAW\",\"app\":\"App_app__2dbeb\",\"body\":\"App_body__ghULB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1ryO0\",\"iconBlock\":\"Header_iconBlock__3ru--\",\"newEventsCount\":\"Header_newEventsCount__1SbZo\"};","export  type EType = {\r\n    id: string,\r\n    title: string,\r\n    date: any,\r\n    isRead: boolean,\r\n}\r\n\r\nconst initialState: Array<EType> = [\r\n\r\n]\r\n\r\nexport const eventsReducer = (state: Array<EType> = initialState, action: ActionsType): Array<EType> => {\r\n    switch (action.type) {\r\n        case \"ADD-EVENT\":\r\n            return [{id: '12', title: action.title, date: action.date, isRead: false}, ...state]\r\n        case \"READ-ALL-EVENTS\":\r\n            return state.map(el=>({...el, isRead: true}))\r\n        case \"DELETE-ALL-EVENTS\":\r\n            return state=[]\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addEvent = (title: string) =>{\r\n    const nowDate = new Date().toString().split(' ').splice(1,4).join(' ')\r\n    return ({type: 'ADD-EVENT', title, date: nowDate} as const)\r\n}\r\n\r\n\r\nexport const readAllEvents = () =>\r\n    ({type: 'READ-ALL-EVENTS'} as const)\r\n\r\nexport const deleteAllEvents = () =>\r\n    ({type: 'DELETE-ALL-EVENTS'} as const)\r\n\r\n\r\ntype ActionsType =\r\n    | ReturnType<typeof addEvent>\r\n    | ReturnType<typeof readAllEvents>\r\n    | ReturnType<typeof deleteAllEvents>\r\n\r\n\r\n","export  type AppType = {\r\n    showEventListToggle: boolean\r\n}\r\n\r\nconst initialState: AppType = {\r\n    showEventListToggle: true,\r\n}\r\n\r\nexport const appReducer = (state: AppType = initialState, action: ActionsType): AppType => {\r\n    switch (action.type) {\r\n        case \"SHOW-HIDE-EVENT\":\r\n            return {...state, showEventListToggle: action.showEvent}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const showHideEvent = (showEvent: boolean) => {\r\n    return ({type: 'SHOW-HIDE-EVENT', showEvent} as const)\r\n}\r\n\r\ntype ActionsType =\r\n    | ReturnType<typeof showHideEvent>\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addEvent, deleteAllEvents, EType, readAllEvents} from \"../../state/event-reducer\";\r\nimport {AppRootStateType} from \"../../state/store\";\r\nimport style from \"./EventForm.module.css\"\r\nimport {showHideEvent} from \"../../state/app-reducer\";\r\n\r\nconst EventForm = () => {\r\n    const [eventTitle, setEventTitle] = useState('')\r\n    const events = useSelector<AppRootStateType, Array<EType>>(state => state.even)\r\n    const showEventListToggle = useSelector<AppRootStateType, any>(state => state.app.showEventListToggle)\r\n    const [count, setCount] = useState(events.length + 1)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const id = setInterval(() => {\r\n            setCount(prevCount => prevCount + 1)\r\n        }, 3000)\r\n        return () => clearInterval(id)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        dispatch(addEvent(`Новое событие ${count}`))\r\n    }, [count])\r\n\r\n    const handleSubmit = (event: React.SyntheticEvent | React.KeyboardEvent) => {\r\n        eventTitle !== '' &&\r\n        dispatch(addEvent(eventTitle))\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n        setEventTitle('')\r\n    }\r\n\r\n    const onReadAllEvents = () => {\r\n        dispatch(readAllEvents())\r\n    }\r\n\r\n    const onRemoveAllEvents = () => {\r\n        dispatch(deleteAllEvents())\r\n    }\r\n\r\n    const onShowHideEventList = () => {\r\n        dispatch(showHideEvent(!showEventListToggle))\r\n    }\r\n\r\n    const onKeyPressHandler = (e: React.KeyboardEvent) => {\r\n        e.key === 'Enter' && handleSubmit(e)\r\n    }\r\n\r\n    return (\r\n        <div className={style.eFormContainer}>\r\n            <div className={style.eForm}>\r\n                <div className={style.formItem}>\r\n                    <input\r\n                        type='text'\r\n                        value={eventTitle}\r\n                        onChange={(e) => setEventTitle(e.target.value)}\r\n                        onKeyPress={onKeyPressHandler}\r\n                    />\r\n                    <button onClick={handleSubmit}>Отправить</button>\r\n                </div>\r\n                <button className={style.formItem} onClick={onReadAllEvents}>Пометить все события прочитанными</button>\r\n                <button className={style.formItem} onClick={onRemoveAllEvents}>Удалить все события</button>\r\n                <button className={style.formItem} onClick={onShowHideEventList}>\r\n                    {!showEventListToggle ? 'Показать попап нотификаций' :'Скрыть попап нотификаций'}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventForm;","export default __webpack_public_path__ + \"static/media/bell-icon.11b85ebb.svg\";","import React from 'react';\r\nimport style from \"./Header.module.css\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../state/store\";\r\nimport {EType} from \"../../state/event-reducer\";\r\nimport BellIcon from \"./../../assets/images/bell-icon.svg\"\r\n\r\nconst Header = () => {\r\n\r\n    const iconStyle = {\r\n        backgroundImage: `url(${BellIcon})`,\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat'\r\n    }\r\n\r\n    const events = useSelector<AppRootStateType, Array<EType>>(state => state.even)\r\n\r\n    const getReadEventsCount = () => {\r\n        let readEventsCount = 0\r\n        events.forEach(el => !el.isRead && (readEventsCount += 1))\r\n        return readEventsCount\r\n    }\r\n\r\n    return (\r\n        <div className={style.header}>\r\n            <div className={style.iconBlock} style={iconStyle}>\r\n                {getReadEventsCount() > 0 &&\r\n                <div className={style.newEventsCount}>\r\n                    <span>{getReadEventsCount()}</span>\r\n                </div>}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport style from \"./EventsList.module.css\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../state/store\";\r\nimport {EType} from \"../../state/event-reducer\";\r\nimport {showHideEvent} from \"../../state/app-reducer\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport \"./event-list-styles.css\"\r\n\r\nconst EventsList = () => {\r\n    const events = useSelector<AppRootStateType, Array<EType>>(state => state.even)\r\n    const showEventListToggle = useSelector<AppRootStateType, any>(state => state.app.showEventListToggle)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const getFirstFourEvents = () => {\r\n        const eventsCopy = [...events]\r\n        eventsCopy.length = 5\r\n        return eventsCopy\r\n    }\r\n\r\n    const showAllEvents = () => {\r\n        dispatch(showHideEvent(false))\r\n    }\r\n\r\n    return (\r\n        <div className={style.eventsListContainer}>\r\n            <CSSTransition\r\n                in={showEventListToggle}\r\n                timeout={2000}\r\n                classNames=\"event-list\"\r\n                unmountOnExit\r\n            >\r\n                <div className={style.eventsListWrapper}>\r\n                    <div className={style.eventsList}>\r\n                        {getFirstFourEvents().map((el, id) => {\r\n                            return (\r\n                                <div className={style.eventBlock} key={id}>\r\n                                    <span className={style.tittle}>{el.title}</span>\r\n                                    <span className={style.date}>{el.date}</span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <div>\r\n                        <span onClick={showAllEvents} className={style.showAllEvents}>посмотреть все...</span>\r\n                    </div>\r\n                </div>\r\n            </CSSTransition>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventsList;","import React from 'react';\nimport style from './App.module.css'\nimport EventForm from \"./AddEventForms/EventForm\";\nimport Header from \"./Header/Header\";\nimport EventsList from \"./EventsList/EventsList\";\n\n\nfunction App() {\n\n\n\n    return (\n        <div className={style.appContainer}>\n            <div className={style.app}>\n                <Header/>\n                <div className={style.body}>\n                    <EventForm/>\n                    <EventsList/>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {eventsReducer} from \"./event-reducer\";\r\nimport {appReducer} from \"./app-reducer\";\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    even: eventsReducer,\r\n    app: appReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./state/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"eventsListContainer\":\"EventsList_eventsListContainer__i-aVs\",\"eventsListWrapper\":\"EventsList_eventsListWrapper__3BDSh\",\"eventsList\":\"EventsList_eventsList__1VFh_\",\"eventBlock\":\"EventsList_eventBlock__2klQW\",\"showAllEvents\":\"EventsList_showAllEvents__ncweV\",\"tittle\":\"EventsList_tittle__3ItsJ\",\"date\":\"EventsList_date__1fvzg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"eFormContainer\":\"EventForm_eFormContainer__3S-dB\",\"eForm\":\"EventForm_eForm__X3Hxi\",\"formItem\":\"EventForm_formItem__1ThTd\"};"],"sourceRoot":""}